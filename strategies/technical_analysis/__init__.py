"""
Technical Analysis Module

–ú–æ–¥—É–ª—å —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–æ–≥–æ –∞–Ω–∞–ª–∏–∑–∞ –¥–ª—è —Ç–æ—Ä–≥–æ–≤—ã—Ö —Å—Ç—Ä–∞—Ç–µ–≥–∏–π.
–ü—Ä–µ–¥–æ—Å—Ç–∞–≤–ª—è–µ—Ç –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞ —É—Ä–æ–≤–Ω–µ–π, ATR, –ø–∞—Ç—Ç–µ—Ä–Ω–æ–≤ –∏ —Ä—ã–Ω–æ—á–Ω—ã—Ö —É—Å–ª–æ–≤–∏–π.

Components:
- TechnicalAnalysisContext: –ö—ç—à–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –∫–æ–Ω—Ç–µ–∫—Å—Ç —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–æ–≥–æ –∞–Ω–∞–ª–∏–∑–∞
- TechnicalAnalysisContextManager: –ú–µ–Ω–µ–¥–∂–µ—Ä –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–≥–æ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –∫–æ–Ω—Ç–µ–∫—Å—Ç–æ–≤
- LevelAnalyzer: –ê–Ω–∞–ª–∏–∑–∞—Ç–æ—Ä —É—Ä–æ–≤–Ω–µ–π –ø–æ–¥–¥–µ—Ä–∂–∫–∏/—Å–æ–ø—Ä–æ—Ç–∏–≤–ª–µ–Ω–∏—è (TODO)
- ATRCalculator: –ö–∞–ª—å–∫—É–ª—è—Ç–æ—Ä ATR (TODO)
- PatternDetector: –î–µ—Ç–µ–∫—Ç–æ—Ä –ø–∞—Ç—Ç–µ—Ä–Ω–æ–≤ –ë–°–£-–ë–ü–£ (TODO)
- BreakoutAnalyzer: –ê–Ω–∞–ª–∏–∑–∞—Ç–æ—Ä –ø—Ä–æ–±–æ–µ–≤ (TODO)
- MarketConditions: –ê–Ω–∞–ª–∏–∑–∞—Ç–æ—Ä —Ä—ã–Ω–æ—á–Ω—ã—Ö —É—Å–ª–æ–≤–∏–π (TODO)

Author: Trading Bot Team
Version: 1.0.0
"""

import logging

# Context –∏ Manager (–≥–æ—Ç–æ–≤—ã)
from .context import (
    TechnicalAnalysisContext,
    SupportResistanceLevel,
    ATRData,
    MarketCondition,
    TrendDirection
)

from .context_manager import TechnicalAnalysisContextManager

# –ê–Ω–∞–ª–∏—Ç–∏—á–µ—Å–∫–∏–µ –º–æ–¥—É–ª–∏ (–±—É–¥—É—Ç –¥–æ–±–∞–≤–ª–µ–Ω—ã)
# from .level_analyzer import LevelAnalyzer
# from .atr_calculator import ATRCalculator
# from .pattern_detector import PatternDetector
# from .breakout_analyzer import BreakoutAnalyzer
# from .market_conditions import MarketConditionsAnalyzer

logger = logging.getLogger(__name__)

__all__ = [
    # Context
    "TechnicalAnalysisContext",
    "SupportResistanceLevel",
    "ATRData",
    "MarketCondition",
    "TrendDirection",
    
    # Manager
    "TechnicalAnalysisContextManager",
    
    # Analyzers (TODO)
    # "LevelAnalyzer",
    # "ATRCalculator",
    # "PatternDetector",
    # "BreakoutAnalyzer",
    # "MarketConditionsAnalyzer",
]

__version__ = "1.0.0"

# –°—Ç–∞—Ç—É—Å –º–æ–¥—É–ª–µ–π
MODULE_STATUS = {
    "context": "‚úÖ Ready",
    "context_manager": "‚úÖ Ready",
    "level_analyzer": "‚è≥ Pending",
    "atr_calculator": "‚è≥ Pending",
    "pattern_detector": "‚è≥ Pending",
    "breakout_analyzer": "‚è≥ Pending",
    "market_conditions": "‚è≥ Pending"
}

def get_module_status():
    """–í–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Å—Ç–∞—Ç—É—Å –≤—Å–µ—Ö –º–æ–¥—É–ª–µ–π"""
    return MODULE_STATUS.copy()

def is_fully_ready():
    """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç—å –≤—Å–µ—Ö –º–æ–¥—É–ª–µ–π"""
    return all(status == "‚úÖ Ready" for status in MODULE_STATUS.values())

# –õ–æ–≥–∏—Ä—É–µ–º —Å—Ç–∞—Ç—É—Å –ø—Ä–∏ –∏–º–ø–æ—Ä—Ç–µ
logger.info("=" * 60)
logger.info("üìä Technical Analysis Module Loading...")
logger.info("=" * 60)

for module, status in MODULE_STATUS.items():
    logger.info(f"  {status} {module}")

if is_fully_ready():
    logger.info("‚úÖ All technical analysis modules ready!")
else:
    ready_count = sum(1 for s in MODULE_STATUS.values() if s == "‚úÖ Ready")
    total_count = len(MODULE_STATUS)
    logger.info(f"‚è≥ {ready_count}/{total_count} modules ready")

logger.info("=" * 60)
